import OpenIMSDK from '..';
import { BaseResponse } from '../../types/entity';
import { MessageItem, CardElem, AdvancedGetMessageResult } from '@openim/wasm-client-sdk/lib/types/entity';
import { AtMsgParams, LocationMsgParams, CustomMsgParams, QuoteMsgParams, MergerMsgParams, FaceMessageParams, SendMsgParams, TypingUpdateParams, SearchLocalParams, GetAdvancedHistoryMsgParams, FindMessageParams, InsertGroupMsgParams, InsertSingleMsgParams, SetMessageLocalExParams, AccessMessageParams, ImageMsgParamsByURL, VideoMsgParamsByURL, FileMsgParamsByURL, SoundMsgParamsByURL, SendGroupReadReceiptParams, GetGroupMessageReaderParams } from '@openim/wasm-client-sdk/lib/types/params';
import { VideoMsgByPathParams, SoundMsgByPathParams, FileMsgByPathParams } from '../../types/params';
export declare function setupMessageModule(openIMSDK: OpenIMSDK): {
    createTextMessage: (content: string, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createTextAtMessage: (params: AtMsgParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createLocationMessage: (params: LocationMsgParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createCustomMessage: (params: CustomMsgParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createQuoteMessage: (params: QuoteMsgParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createCardMessage: (params: CardElem, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createMergerMessage: (params: MergerMsgParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createFaceMessage: (params: FaceMessageParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createForwardMessage: (message: MessageItem, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createImageMessage: (imagePath: string, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createImageMessageFromFullPath: (imagePath: string, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createImageMessageByURL: (params: ImageMsgParamsByURL, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createVideoMessage: (params: VideoMsgByPathParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createVideoMessageFromFullPath: (params: VideoMsgByPathParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createVideoMessageByURL: (params: VideoMsgParamsByURL, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createSoundMessage: (params: SoundMsgByPathParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createSoundMessageFromFullPath: (params: SoundMsgByPathParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createSoundMessageByURL: (params: SoundMsgParamsByURL, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createFileMessage: (params: FileMsgByPathParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createFileMessageFromFullPath: (params: FileMsgByPathParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createFileMessageByURL: (params: FileMsgParamsByURL, opid?: string) => Promise<BaseResponse<MessageItem>>;
    sendMessage: (params: SendMsgParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    sendMessageNotOss: (params: SendMsgParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    typingStatusUpdate: (params: TypingUpdateParams, opid?: string) => Promise<BaseResponse<void>>;
    revokeMessage: (params: AccessMessageParams, opid?: string) => Promise<BaseResponse<void>>;
    deleteMessage: (params: AccessMessageParams, opid?: string) => Promise<BaseResponse<void>>;
    deleteMessageFromLocalStorage: (params: AccessMessageParams, opid?: string) => Promise<BaseResponse<void>>;
    deleteAllMsgFromLocal: (opid?: string) => Promise<BaseResponse<void>>;
    deleteAllMsgFromLocalAndSvr: (opid?: string) => Promise<BaseResponse<void>>;
    searchLocalMessages: (params: SearchLocalParams, opid?: string) => Promise<BaseResponse<MessageItem[]>>;
    getAdvancedHistoryMessageList: (params: GetAdvancedHistoryMsgParams, opid?: string) => Promise<BaseResponse<AdvancedGetMessageResult>>;
    getAdvancedHistoryMessageListReverse: (params: GetAdvancedHistoryMsgParams, opid?: string) => Promise<BaseResponse<AdvancedGetMessageResult>>;
    findMessageList: (params: FindMessageParams[], opid?: string) => Promise<BaseResponse<MessageItem[]>>;
    insertGroupMessageToLocalStorage: (params: InsertGroupMsgParams, opid?: string) => Promise<BaseResponse<void>>;
    insertSingleMessageToLocalStorage: (params: InsertSingleMsgParams, opid?: string) => Promise<BaseResponse<void>>;
    setMessageLocalEx: (params: SetMessageLocalExParams, opid?: string) => Promise<BaseResponse<void>>;
    sendGroupMessageReadReceipt: (params: SendGroupReadReceiptParams, opid?: string) => Promise<BaseResponse<void>>;
    getGroupMessageReaderList: (params: GetGroupMessageReaderParams, opid?: string) => Promise<BaseResponse<string[]>>;
};
export interface MessageModuleApi {
    createTextMessage: (content: string, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createTextAtMessage: (params: AtMsgParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createLocationMessage: (params: LocationMsgParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createCustomMessage: (params: CustomMsgParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createQuoteMessage: (params: QuoteMsgParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createCardMessage: (params: CardElem, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createMergerMessage: (params: MergerMsgParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createFaceMessage: (params: FaceMessageParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createForwardMessage: (message: MessageItem, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createImageMessage: (imagePath: string, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createImageMessageFromFullPath: (imagePath: string, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createImageMessageByURL: (params: ImageMsgParamsByURL, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createVideoMessage: (params: VideoMsgByPathParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createVideoMessageFromFullPath: (params: VideoMsgByPathParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createVideoMessageByURL: (params: VideoMsgParamsByURL, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createSoundMessage: (params: SoundMsgByPathParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createSoundMessageFromFullPath: (params: SoundMsgByPathParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createSoundMessageByURL: (params: SoundMsgParamsByURL, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createFileMessage: (params: FileMsgByPathParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createFileMessageFromFullPath: (params: FileMsgByPathParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    createFileMessageByURL: (params: FileMsgParamsByURL, opid?: string) => Promise<BaseResponse<MessageItem>>;
    sendMessage: (params: SendMsgParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    sendMessageNotOss: (params: SendMsgParams, opid?: string) => Promise<BaseResponse<MessageItem>>;
    typingStatusUpdate: (params: TypingUpdateParams, opid?: string) => Promise<BaseResponse<void>>;
    revokeMessage: (params: AccessMessageParams, opid?: string) => Promise<BaseResponse<void>>;
    deleteMessage: (params: AccessMessageParams, opid?: string) => Promise<BaseResponse<void>>;
    deleteMessageFromLocalStorage: (params: AccessMessageParams, opid?: string) => Promise<BaseResponse<void>>;
    deleteAllMsgFromLocal: (opid?: string) => Promise<BaseResponse<void>>;
    deleteAllMsgFromLocalAndSvr: (opid?: string) => Promise<BaseResponse<void>>;
    searchLocalMessages: (params: SearchLocalParams, opid?: string) => Promise<BaseResponse<MessageItem[]>>;
    getAdvancedHistoryMessageList: (params: GetAdvancedHistoryMsgParams, opid?: string) => Promise<BaseResponse<AdvancedGetMessageResult>>;
    getAdvancedHistoryMessageListReverse: (params: GetAdvancedHistoryMsgParams, opid?: string) => Promise<BaseResponse<AdvancedGetMessageResult>>;
    findMessageList: (params: FindMessageParams[], opid?: string) => Promise<BaseResponse<MessageItem[]>>;
    insertGroupMessageToLocalStorage: (params: InsertGroupMsgParams, opid?: string) => Promise<BaseResponse<void>>;
    insertSingleMessageToLocalStorage: (params: InsertSingleMsgParams, opid?: string) => Promise<BaseResponse<void>>;
    setMessageLocalEx: (params: SetMessageLocalExParams, opid?: string) => Promise<BaseResponse<void>>;
    sendGroupMessageReadReceipt: (params: SendGroupReadReceiptParams, opid?: string) => Promise<BaseResponse<void>>;
    getGroupMessageReaderList: (params: GetGroupMessageReaderParams, opid?: string) => Promise<BaseResponse<string[]>>;
}
